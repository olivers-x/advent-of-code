{"mappings":"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","sources":["script.cjs"],"sourcesContent":["const fs = require(\"fs\");\nconst readline = require(\"readline\");\n\nconst sum = (a, b) => a + b;\n\nlet mapSize;\nlet antinodeMap;\nlet char = \"#\";\nlet count = 0;\n\nasync function readFileLineByLine(filePath) {\n  const fileStream = fs.createReadStream(filePath);\n\n  const rl = readline.createInterface({\n    input: fileStream,\n    crlfDelay: Infinity, // Recognizes all instances of CR LF as line breaks\n  });\n\n  // const size = rl.length;\n  const lines = []; // new Array(size);\n\n  for await (const line of rl) {\n    lines.push(line);\n  }\n\n  return lines;\n}\n\nfunction getLocations(map) {\n  const locations = {};\n  const size = map.length;\n\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      const char = map[i][j];\n      if (char !== \".\") {\n        if (!locations[char]) {\n          locations[char] = [];\n        } else {\n          // at least a pair of antennas\n          antinodeMap[i][j] = char;\n          const [{ x, y }] = locations[char];\n          antinodeMap[x][y] = char;\n        }\n        locations[char].push({ x: i, y: j });\n      }\n    }\n  }\n\n  return locations;\n}\n\nfunction initAntinodeMap() {\n  antinodeMap = Array(mapSize)\n    .fill()\n    .map(() => Array(mapSize).fill(\".\"));\n}\n\nfunction getAntinodeCount() {\n  for (let i = 0; i < mapSize; i++)\n    for (let j = 0; j < mapSize; j++) {\n      if (antinodeMap[i][j] !== \".\") count += 1;\n    }\n\n  return count;\n}\n\nfunction placeIfOk(x, y) {\n  if (!(x < 0 || y < 0 || x > mapSize - 1 || y > mapSize - 1)) {\n    antinodeMap[x][y] = char;\n  }\n}\n\nfunction placeAntinode(a, b) {\n  // b > a\n\n  let dx = a.x - b.x;\n  let dy = a.y - b.y;\n\n  placeIfOk(a.x + dx, a.y + dy);\n  placeIfOk(b.x - dx, b.y - dy);\n}\n\nfunction placeAntinode2(a, b) {\n  let dx = a.x - b.x;\n  let dy = a.y - b.y;\n\n  let x = a.x + dx;\n  let y = a.y + dy;\n\n  while (x < mapSize && y < mapSize) {\n    placeIfOk(x, y);\n    x += dx;\n    y += dy;\n  }\n\n  x = b.x - dx;\n  y = b.y - dy;\n\n  while (x >= 0 && y >= 0) {\n    placeIfOk(x, y);\n    x -= dx;\n    y -= dy;\n  }\n}\n\nfunction goThrouLocations(locations) {\n  // for each two points place two antinodes\n  const size = locations.length;\n\n  for (let i = 0; i < size; i++)\n    for (let j = 0; j < i; j++) {\n      if (i === j) continue;\n\n      const a = locations[i];\n      const b = locations[j];\n\n      placeAntinode2(a, b);\n    }\n}\n\nasync function main() {\n  const fileName = process.argv[process.argv.length - 1];\n\n  const map = await readFileLineByLine(fileName);\n  mapSize = map.length;\n\n  initAntinodeMap();\n\n  const locations = getLocations(map);\n\n  Object.values(locations).forEach(goThrouLocations);\n\n  console.log(getAntinodeCount());\n}\n\nmain();\n"],"names":[],"version":3,"file":"script.js.map"}